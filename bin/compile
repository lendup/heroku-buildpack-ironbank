#!/bin/bash

set -euo pipefail

BUILD_DIR="$1"
CACHE_DIR="$2"
ENV_DIR="$3"

export_env_dir() {
  env_dir=$1
  whitelist_regex=${2:-'^(ARTIFACTORY_USERNAME|ARTIFACTORY_PASSWORD|ENABLE_MAVEN_DEBUG)$'}
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH|JAVA_TOOL_OPTIONS)$'}
  if [ -d "$env_dir" ]; then
    pushd "$env_dir"
    for e in * ; do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat "$env_dir/$e")"
      echo "       export_env_dir: set $e"
    done
    popd
  fi
}

##
## Constants
##

MAVEN_URL="http://www.gtlib.gatech.edu/pub/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz"
MAVEN_DIR="apache-maven"
CACHED_MAVEN_REPO=${CACHE_DIR}/.m2_repository

##
## Code
##

# Set up Maven
if [ ! -d ${CACHE_DIR}/${MAVEN_DIR} ]; then
    mkdir -p ${CACHE_DIR}/${MAVEN_DIR}
    echo "-----> Cached Maven binary not found, downloading"
    wget -qO- ${MAVEN_URL} | tar xz -C ${CACHE_DIR}/${MAVEN_DIR} --strip-components 1
fi

cp -r ${CACHE_DIR}/${MAVEN_DIR} ${BUILD_DIR}

# Build entire project
cd "$BUILD_DIR"

# Ensure a dev.conf file exists
touch ${BUILD_DIR}/conf/dev.conf

export_env_dir "$ENV_DIR"
echo "-----> Using ARTIFACTORY_USERNAME: $ARTIFACTORY_USERNAME"

MAVEN_DEBUG_FLAGS=""
[[ -n "${ENABLE_MAVEN_DEBUG:-}" ]] && MAVEN_DEBUG_FLAGS="-e -X"

# Initialize Play! and precompile it.
echo "-----> BUILD_DIR = ${BUILD_DIR}"
echo "-----> CACHED_MAVEN_REPO = ${CACHED_MAVEN_REPO}"
echo "-----> ${BUILD_DIR}/${MAVEN_DIR}/bin/mvn $MAVEN_DEBUG_FLAGS -P '!local' --settings ${BUILD_DIR}/assets/settings.xml -Dmaven.repo.local=${CACHED_MAVEN_REPO} clean compile play:precompile
"

${BUILD_DIR}/${MAVEN_DIR}/bin/mvn $MAVEN_DEBUG_FLAGS -P '!local' --settings ${BUILD_DIR}/assets/settings.xml -Dmaven.repo.local=${CACHED_MAVEN_REPO} clean compile play:precompile

# remove unnecessary node modules and free up space since slug is limited to <300 MB compressed
rm -rf ${BUILD_DIR}/ironbank-credit/src/main/javascript/node_modules ${BUILD_DIR}/src/main/javascript/node_modules

cp -r ${CACHED_MAVEN_REPO} ${BUILD_DIR}
